// Created by: PtahX
// 
// Dec 12, 2017
// setup for Star Citizen PTU Version 2.6
// 
// Running t16000, Thrustmaster TFRP Rudder pedals and the TWCS Throttle in this configuration
// I've tried to use USB codes instead of key binds in case others are not using US keyboards
// I'd suggest using the "pp_rebindkeys" command in console to reset the standard keys layout in Star Citizen 
// 

include "target.tmh"


int main()
{
	

	// ---------------------------------------------------------------------------------------
	// USB Hardware Selection
	// ---------------------------------------------------------------------------------------	
	
		// not used in this config
		//
		Configure(&HCougar, MODE_EXCLUDED); // Cougar HOTAS
		Configure(&Joystick, MODE_EXCLUDED); // Warthog Joystick
		Configure(&Throttle, MODE_EXCLUDED); // Warthog Throttle
		Configure(&T16000L, MODE_EXCLUDED); // Left Hand Joystick
		Configure(&LMFD, MODE_EXCLUDED); // Left MFD Cougar
		Configure(&RMFD, MODE_EXCLUDED); // Right MFD Cougar

		// used in this config (Rudder pedals are plugged in to Throttle)
		//
		// Configure(&TFRPRudder, MODE_EXCLUDED); // TFRP Rudder Pedals 
		// Configure(&T16000, MODE_EXCLUDED); // T16000 Stick 
		// Configure(&TWCSThrottle, MODE_EXCLUDED); // FCM Throttle & Pedals



	// ---------------------------------------------------------------------------------------
	// Keyboard Layout
	// ---------------------------------------------------------------------------------------
	
		if(Init(&EventHandle)) return 1;
		SetKBRate(32, 50);
		SetKBLayout(KB_ENG);

	// ---------------------------------------------------------------------------------------
	// RIGHT SIDE T16000 JOYSTICK BINDS
	// ---------------------------------------------------------------------------------------
	
		// UPPER BUTTONS
			MapKey(&T16000, TS1, MOUSE_LEFT);													// FIRE_GROUP1
			MapKey(&T16000, TS2, USB[42]);														// FIRE_GROUP2
			MapKey(&T16000, TS3, PULSE+MOUSE_CENTER);											// LOCK_MISSILE
			MapKey(&T16000, TS4, CHAIN( DOWN+MOUSE_CENTER, D(2000), UP+MOUSE_CENTER));			// FIRE_MISSILE
	
		// HAT
			MapKey(&T16000, H1U, USB[32]);														// POWER_ENGINE
			MapKey(&T16000, H1R, USB[30]);														// POWER_WEAPONS
			MapKey(&T16000, H1D, USB[39]);														// POWER_RESET
			MapKey(&T16000, H1L, USB[80]);														// POWER_WEAPONS

		// LOWER LEFT BUTTONS
			MapKey(&T16000, B5, PULSE+USB[17]);													// LANDING_GEAR
			MapKey(&T16000, B6, 0);																// NULL
			MapKey(&T16000, B7, 0);																// NULL
			MapKey(&T16000, B8, PULSE+USB[58]);													// MOBI_GLASS
			MapKey(&T16000, B9, 0);																// NULL
			MapKey(&T16000, B10, CHAIN( DOWN+USB[17], D(2200), UP+USB[17]));					// AUTO_LAND

		// LOWER RIGHT BUTTONS
			MapKey(&T16000, B11, 0);															// NULL
			MapKey(&T16000, B12, 0);															// NULL
			MapKey(&T16000, B13, 0);															// NULL
			MapKey(&T16000, B14, 0);															// NULL
			MapKey(&T16000, B15, PULSE+USB[73]);												// TOGGLE_LIGHTS
			MapKey(&T16000, B16, 0);															// NULL
	
	

	// ---------------------------------------------------------------------------------------
	// LEFT SIDE TWCS THROTTLE 
	// ---------------------------------------------------------------------------------------
		
		// BUTTONS
			MapKey(&TWCSThrottle, TLOCK, PULSE+USB[6]);											// DECOUPLE
			MapKey(&TWCSThrottle, TBTN1, PULSE+USB[72]);										// TEAMSPEAK (BREAK KEY)
			MapKey(&TWCSThrottle, TBTN2, PULSE+USB[226]+USB[21]);								// TARGET_FOCUS
			MapKey(&TWCSThrottle, TBTN3, USB[225]);												// ENGINE_BOOST
			MapKey(&TWCSThrottle, TBTN4, USB[224]);												// STRAFE_DOWN
			MapKey(&TWCSThrottle, TBTN5, USB[44]);												// STRAFE_UP

		// MIDDLE HAT
			MapKey(&TWCSThrottle, THAT1U, PULSE+USB[23]);										// NEAREST_HOSTILE
			MapKey(&TWCSThrottle, THAT1R, PULSE+USB[28]);										// NEXT_HOSTILE
			MapKey(&TWCSThrottle, THAT1D, PULSE+USB[12]);										// CYCLE_ALL
			MapKey(&TWCSThrottle, THAT1L, PULSE+USB[24]);										// CYCLE_FRIENDLY

		// LOWER HAT
			MapKey(&TWCSThrottle, THAT3U, 0);													// NULL
			MapKey(&TWCSThrottle, THAT3R, 0);													// NULL
			MapKey(&TWCSThrottle, THAT3D, 0);													// NULL
			MapKey(&TWCSThrottle, THAT3L, 0);													// NULL

		// UPPER HAT
			MapKey(&TWCSThrottle, THAT2U, PULSE+USB[226]+USB[10]);								// FIRE_CHAFF
			MapKey(&TWCSThrottle, THAT2R, PULSE+USB[10]);										// CYCLE_CM
			MapKey(&TWCSThrottle, THAT2D, 0);													// NULL
			MapKey(&TWCSThrottle, THAT2L, 0);													// NULL

	// ---------------------------------------------------------------------------------------
	// DX Axis 
	// ---------------------------------------------------------------------------------------

		// T16000 Joystick 
			MapAxis(&T16000, JOYY, DX_Y_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
			MapAxis(&T16000, RUDDER, DX_Z_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
			MapAxis(&T16000, THR, 0, AXIS_NORMAL, MAP_ABSOLUTE);								// NULL

		// TWCS Throttle 
			MapAxis(&TWCSThrottle, TRDR, 0, AXIS_NORMAL, MAP_ABSOLUTE);							// NULL
			MapAxis(&TWCSThrottle, TTHR, DX_THROTTLE_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
			MapAxis(&TWCSThrottle, TANT, DX_SLIDER_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
			MapAxis(&TWCSThrottle, TMSTX, DX_XROT_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
			MapAxis(&TWCSThrottle, TMSTY, DX_YROT_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
			MapAxis(&TWCSThrottle, TCSRIGHT, 0, AXIS_NORMAL, MAP_ABSOLUTE);						// NULL
			MapAxis(&TWCSThrottle, TCSRUDDER, DX_Z_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
			MapAxis(&TWCSThrottle, TCSLEFT, 0, AXIS_NORMAL, MAP_ABSOLUTE);						// NULL
			KeyAxis(&TWCSThrottle, TRDR, 0, AXMAP2( LIST( 0, 45, 55 ), 0, 0, 0 ));				// NULL
	
		// TFRP Rudder Pedals
			MapAxis(&TFRPRudder, TRPRIGHT, 0, AXIS_NORMAL, MAP_ABSOLUTE);						// NULL
			MapAxis(&TFRPRudder, TRUDDER, DX_Z_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
			MapAxis(&TFRPRudder, TRPLEFT, 0, AXIS_NORMAL, MAP_ABSOLUTE);						// NULL



	// ---------------------------------------------------------------------------------------
	// Deadzones & Curves 
	// ---------------------------------------------------------------------------------------
	
	// T16000 Joystick 
	SetSCurve(&T16000, JOYX, 0, 0, 0, 0, 0);
	SetSCurve(&T16000, JOYY, 0, 0, 0, 0, 0);
	SetSCurve(&T16000, RUDDER, 0, 0, 0, 0, 0);
	SetSCurve(&T16000, THR, 0, 0, 0, 0, 0);

	// TWCS Throttle 
	SetSCurve(&TWCSThrottle, TRDR, 0, 0, 0, 0, 0);
	SetSCurve(&TWCSThrottle, TTHR, 0, 0, 0, 0, 0);
	SetSCurve(&TWCSThrottle, TANT, 0, 0, 0, 0, 0);
	SetSCurve(&TWCSThrottle, TMSTX, 0, 0, 0, 0, 0);
	SetSCurve(&TWCSThrottle, TMSTY, 0, 0, 0, 0, 0);
	SetSCurve(&TWCSThrottle, TCSRIGHT, 0, 0, 0, 0, 0);
	SetSCurve(&TWCSThrottle, TCSRUDDER, 0, 0, 0, 0, 0);
	SetSCurve(&TWCSThrottle, TCSLEFT, 0, 0, 0, 0, 0);

	// TFRP Rudder Pedals
	SetSCurve(&TFRPRudder, TRPRIGHT, 0, 0, 0, 0, 0);
	SetSCurve(&TFRPRudder, TRUDDER, 0, 0, 0, 0, 0);
	SetSCurve(&TFRPRudder, TRPLEFT, 0, 0, 0, 0, 0);

}
int EventHandle(int type, alias o, int x)
{
	DefaultMapping(&o, x);
}

